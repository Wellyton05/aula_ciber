name: Deploy - Atualizar Servidores
run-name: Deploy do artefato ${{ inputs.releasetag }} em ${{ inputs.ambiente }} disparada por ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      releasetag:
        description: "Nome da versão/tag para deploy (ex: v1.0.1)"
        type: string
        required: true
      ambiente:
        type: choice
        description: 'Ambiente de destino'
        required: true
        default: 'TST'
        options:
        - TST
        - PRD

jobs:
  deploy:
    name: Deploy para ${{ inputs.ambiente }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Backend Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          version: "tags/${{ inputs.releasetag }}"
          file: 'backend.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Download Frontend Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          version: "tags/${{ inputs.releasetag }}"
          file: 'frontend.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extrair arquivos
        shell: bash
        run: |
          unzip backend.zip -d backend/
          unzip frontend.zip -d frontend/
          ls -la
          
      - name: Deploy para Teste
        if: inputs.ambiente == 'TST'
        shell: bash
        run: |
          echo "Fazendo deploy para ambiente de TESTE"
          # Aqui você colocaria os comandos para deploy em teste
          
      - name: Deploy para Produção
        if: inputs.ambiente == 'PRD'
        shell: bash
        run: |
          echo "Fazendo deploy para ambiente de PRODUÇÃO"
          # Aqui você colocaria os comandos para deploy em produção
